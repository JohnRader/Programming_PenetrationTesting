Project 3 John Rader

SUMMARY:
This project was broken up into 3 parts, each part being a separate script. The first script is the netshell that once run allows other machines to connect to it using sockets. The second script was the botsinstall script. This script bascically logged into the compromised machines, uploaded the netshell script, logged out, logged back in via SSH, ran the script but making sure it stayed up after logging out from the SSH session, then logging out. The third and final script was the candc script which served as the controller of the bots in our makeshift botnet. It uses sockets created in the script to create a TCP connection to the bots allowing me to send commands simultanously to all bots on the botnet. The stdout of these bots are then send back to the candc server. 

NETSHELL.PY
This is the altered version of the netshell we created in class. It was altered to allow for multiple commands to come through before disconnecting the socket. It now only disconnects when the command exit is entered. It was also altered to allow the stderr to be sent along with the stdout. 

BOTINSTALL.PY
This was the largest of the 3 scripts we created for this project. The script reads the compromised hosts file which is hardcoded in. It then opens a separate file where we add the hosts where we successfully uploading and ran the netshell script. This script goes line by line breaking up the address, username, and password of each triplet in the file. This line is then fed into the sftp function which is in charge of uploading the file onto the host from the file we just read. It uses the information given to automatically log in and upload the file. If the machine was succesfully logged into and the file was uploaded, the host is added to the new file called botted_hosts.txt which will be used in the next script. Once uploaded the connection is lost and we then use a second function to SSH into the machine and run the script. It is run so that even after we log out of the SSH session, the netshell stays running. This process is completed for every host in the compromisedhosts.txt file.

CANDC.PY
This script was actually a lot easier than I had originally thought. It goes through the botted_hosts.txt file and creates a socket connection for each one. This connection is only possible if the host is running the netshell.py we installed from the previous script. We then simply go through the list of sockets we made in a loop. We ask the user for a command, loop through the list of sockets sending the command to each one while receiving the output of the bot. This can be done as many times as you like. To exit the script you simply type exit and it disconnects the sockets and quits the script. 
